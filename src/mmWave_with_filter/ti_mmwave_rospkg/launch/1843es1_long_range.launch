<launch>


  <!-- mmWave_Manager node -->
  <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="ti_mmwave" output="screen">
    <param name="command_port" value="/dev/ttyACM0"  />
    <param name="command_rate" value="115200"   />
    <param name="data_port" value="/dev/ttyACM1"  />
    <param name="data_rate" value="921600"   />
    <param name="max_allowed_elevation_angle_deg" value="$(arg max_allowed_elevation_angle_deg)"   />
    <param name="max_allowed_azimuth_angle_deg" value="$(arg max_allowed_azimuth_angle_deg)"   />
    <param name="frame_id" value="ti_mmwave"/>
  </node>
  
  <!-- mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
  <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/iwr1843_30fps_231007.cfg" output="screen" />
  <!-- <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig" args="$(find ti_mmwave_rospkg)/cfg/xwr1843_v1000.cfg" output="screen" /> -->

  <!-- Static transform from map to base_radar_link for visualization of stand-alone mmWave sensor using Rviz -->
  <node pkg="tf" type="static_transform_publisher" name="static_tf_map_to_base_radar_link" args="0 0 0 0 0 0 ti_mmwave_pcl ti_mmwave 30"/>
  <node pkg="ti_mmwave_rospkg" type="radius_filter" name="radius_filter" output="screen"/>
  <node pkg="ti_mmwave_rospkg" type="hungarian.py" name="hungarian" output="screen"/>
  <node pkg="ti_mmwave_rospkg" type="showObject" name="clustering" output="screen"/>


  <!-- Launch Rviz with pre-defined configuration to view mmWave sensor detected object data (color by intensity) -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ti_mmwave_rospkg)/launch/rviz/ti_mmwave_3d.rviz"/>

</launch>
